<% layout('layouts/app') %>
<div id="mapContainer" style="width: 100%; height: 400px;"></div>
<div class="container mt-5">
  <div class="d-flex justify-content-between align-items-center">
    <h1>All Places</h1>
    <% if(currentUser) { %>
    <a
      href="/places/create"
      class="btn btn-primary d-flex justify-content-between align-items-center py-2"
      ><svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="currentColor"
        class="bi bi-geo-alt-fill"
        viewBox="0 0 16 16"
      >
        <path
          d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10m0-7a3 3 0 1 1 0-6 3 3 0 0 1 0 6"
        /></svg
    ></a>
    <% } %>
  </div>

  <ul class="row mt-4">
    <% for(const place of places) { %>
    <li class="col-md-4 mb-4 col-sm-6">
      <div class="card card-custom shadow-sm rounded overflow-hidden">
        <div class="card-img">
          <div
            class="carousel slide carousel-fade"
            data-bs-ride="carousel"
            id="<%= place._id %>"
          >
            <div class="carousel-inner">
              <% place.images.forEach((image, index)=> { %>
              <div
                class="carousel-item <%= index === 0 ? 'active': '' %>"
                data-bs-interval="4000"
              >
                <img
                  src="/images/<%= image.filename %>"
                  class="d-block w-100 img-fluid img-places"
                  alt="<%= place.title %>"
                />
              </div>
              <% }) %>
            </div>
            <% if (place.images.length > 1) { %>
            <button
              class="carousel-control-prev"
              type="button"
              data-bs-target="#<%= place._id %>"
              data-bs-slide="prev"
            >
              <span
                class="carousel-control-prev-icon"
                aria-hidden="true"
              ></span>
              <span class="visually-hidden">Previous</span>
            </button>
            <button
              class="carousel-control-next"
              type="button"
              data-bs-target="#<%= place._id %>"
              data-bs-slide="next"
            >
              <span
                class="carousel-control-next-icon"
                aria-hidden="true"
              ></span>
              <span class="visually-hidden">Next</span>
            </button>
            <% } %>
          </div>
        </div>
        <div class="card-body">
          <figure>
            <blockquote class="blockquote fs-5">
              <p class="card-title"><%= place.title %></p>
            </blockquote>
            <figcaption class="blockquote-footer fst-italic">
              <%= place.location %>
            </figcaption>
          </figure>
          <p class="card-text lead fs-6">
            <% if (place.description.length > 60) { %>
            <%=place.description.substring(0, 60) %>... <% } else { %>
            <%=place.description %> <% } %>
          </p>
          <a
            href="/places/<%= place._id %>"
            class="btn btn-primary fs-6 btn-card"
            >See Details
          </a>
        </div>
      </div>
    </li>
    <% } %>
  </ul>
</div>
<script>
    <!-- const clusteredPlace = <%- clusteredPlace %>; -->
    <!-- Data -->
    const clusteredPlace = [
    { latitude: -6.30244, longitude: 106.89517 },
    { latitude: -8.72219, longitude: 115.17922 },
    { latitude: -7.44768, longitude: 110.21708 },
    { latitude: -7.10783, longitude: 107.49168 },
    { latitude: -7.7884, longitude: 110.36538 },
    { latitude: -8.82738, longitude: 116.25387 },
    { latitude: 3.14457, longitude: 101.70877 },
    { latitude: -7.76989, longitude: 110.4681 },
    { latitude: 2.66413, longitude: 98.93113 },
    { latitude: -8.02834, longitude: 114.18226 },
    { latitude: -8.67559, longitude: 115.25491 },
    { latitude: -10.17963, longitude: 123.60133 },
    { latitude: -8.3682, longitude: 116.53678 },
    { latitude: -8.3682, longitude: 116.53678 },
    { latitude: 5.89066, longitude: 95.31942 },
    { latitude: -6.7062, longitude: 106.93359 },
    { latitude: -7.51189, longitude: 110.47669 },
    { latitude: -8.59874, longitude: 116.1111 },
    { latitude: -6.31777, longitude: 106.1193 },
    { latitude: -3.30877, longitude: 128.95494 },
    { latitude: -2.99221, longitude: 104.75981 },
  ];
</script>
<script>
  function startClustering(map, data) {
    const dataPoints = data.map(function (item) {
      return new H.clustering.DataPoint(item.latitude, item.longitude);
    });

    const clusteredDataProvider = new H.clustering.Provider(dataPoints, {
      clusteringOptions: {
        // Maximum radius of the neighbourhood
        eps: 32,
        // minimum weight of points required to form a cluster
        minWeight: 2,
      },
    });

    const clusteringLayer = new H.map.layer.ObjectLayer(clusteredDataProvider);
    map.addLayer(clusteringLayer);
  }

  const platform = new H.service.Platform({
    apikey: "hi8gLZMcMERrG5sktsmbI_6RednnuOV6BqqCg4jl2jw",
  });

  const defaultLayers = platform.createDefaultLayers();

  const map = new H.Map(
    document.getElementById("mapContainer"),
    defaultLayers.vector.normal.map,
    {
      zoom: 4,
      center: { lat: -0.9730197, lng: 116.7034266 },
    }
  );

  const ui = H.ui.UI.createDefault(map, defaultLayers, "en-US");
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

  startClustering(map, clusteredPlace);
</script>
